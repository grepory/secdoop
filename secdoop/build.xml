<project name="Secdoop" default="jar" basedir=".">
    <description>
        Secdoop - Encryption/Decryption using Hadoop testing suite.
    </description>

    <!-- Accessing environment variables through ${env.*} -->
    <property environment="env"/>

    <!-- Global properties for our build. -->
    <property name="app.name" value="Secdoop"/>
    <property name="hadoop.dir" value="${env.HADOOP_DIR}"/>
    
    <property name="version" value="0.2"/>

    <!-- File names -->
    <property name="secdoop.jar.name" value="${app.name}-${version}.jar"/>
    <property name="crypttesting.jar.name" value="crypt-${version}.jar"/>
    
    <!-- Build-essential directories -->
    <property name="crypt.src.dir" location="CryptTesting"/>
    <property name="src.dir" location="src"/>
    <property name="build.dir" location="build"/>
    <property name="crypt.build.dir" location="crypt-build"/>
    <property name="lib.dir" value="${hadoop.dir}/lib"/>
    <property name="test.build.dir" value="${build.dir}/test"/>
    <property name="test.build.classes" value="${test.build.dir}/classes"/>

    <!-- Setup the main classpath for compilation -->
    <path id="compile.classpath">
        <pathelement location="${build.classes}"/>
        <fileset dir="${hadoop.dir}">
            <include name="hadoop-*.jar"/>
        </fileset>
        <fileset dir="${hadoop.dir}/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="test.classpath">
        <path refid="compile.classpath"/>
        <pathelement location="${test.build.dir}/classes"/>
        <pathelement location="/usr/share/java/junit4.jar"/>
        <pathelement location="/usr/share/java/junit.jar"/>
        <pathelement location="${hadoop.dir}/mapred/contrib/hadoop-*-mrunit.jar"/>
        <pathelement location="${build.dir}/classes"/>
    </path>

    <target name="init">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${crypt.build.dir}"/>
        <mkdir dir="${test.build.dir}"/>
        <mkdir dir="${build.dir}/classes"/>
        <mkdir dir="${test.build.dir}/classes"/>
        <mkdir dir="${crypt.build.dir}/classes"/>
    </target>

    <target name="compile" depends="init"
        description="Compile files in ${src.dir} and store them in ${build.dir}/classes.">
        <javac srcdir="${src.dir}" destdir="${build.dir}/classes" includeAntRunTime="false">
            <classpath refid="compile.classpath"/>
        </javac>
    </target>

    <target name="test-compile" depends="compile, init"
        description="Compile unit tests.">
        <javac srcdir="${src.dir}/test" destdir="${test.build.dir}/classes" includeAntRunTime="false">
            <classpath refid="test.classpath"/>
        </javac>
    </target>

    <target name="test" depends="test-compile"
        description="Run unit tests. Fail build if tests fail.">
        <junit printsummary="true" haltonfailure="true">
            <classpath refid="test.classpath"/>
            <formatter type="plain" usefile="false"/>
            <test name="SecDoopTest"/>
        </junit>
    </target>

    <target name="jar" depends="test"
        description="Create the Secdoop JAR.">
        <jar jarfile="${build.dir}/${secdoop.jar.name}" basedir="${build.dir}/classes"
            includes="*.class"/>
    </target>

    <target name="compile-crypt" depends="init"
        description="Compile the files in CryptTesting and store them in ${crypt.build.dir}/classes.">
        <javac srcdir="${crypt.src.dir}" destdir="${crypt.build.dir}/classes" includeAntRunTime="false">
            <classpath refid="compile.classpath"/>
        </javac>
    </target>

    <target name="jar-crypt" depends="compile-crypt"
        description="Create the standalone CryptTesting JAR.">
        <jar jarfile="${crypt.build.dir}/${crypttesting.jar.name}" 
            basedir="${crypt.build.dir}/classes"
            includes="*.class"/>
    </target>

    <target name="jar-all" depends="jar-crypt, jar"/>
    <target name="compile-all" depends="compile-crypt, compile"/>

    <target name="clean">
        <delete dir="${build.dir}"/>
        <delete dir="${crypt.build.dir}"/>
    </target>
</project>
